# convert the 'timely_response' into binary
four_companies$timely_response <-
four_companies$timely_response == "Yes"
# attach year and month to the dataset
four_companies_with_year_month <- cbind(year,month,four_companies)
# use 'aggregate' to calculate the mean response rate by category
timely_response_rate <- with(
four_companies_with_year_month,
aggregate(timely_response ~ year + month + Company, FUN = mean)
)
# order the dataframe by 1. company 2. year 3. month
timely_response_rate <-
timely_response_rate[with(timely_response_rate,order(Company,year,month)),]
# unstack the dataframe by company
timely_response_rate_by_company <-
unstack(timely_response_rate,timely_response ~ Company)
# plot the reponse rates over time, leave out the x-axis
matplot(
y = timely_response_rate_by_company, ylim = c(0.6,1.1),
ylab = "timely response rate",type = 'b',xaxt = 'n',xlab = "Year and Month"
)
# we want to label x-axis with year
axis(1, at = 2 + (-1:5) * 12, labels = as.character(2011:2017))
# add legend for readability
legend(
"bottomright", unique(timely_response_rate$Company),
pch = as.character(1:4),col = 1:4
)
# if you wish to label x-axis with year/month, do this:
# year_month <- unique(with(timely_response_rate,paste("20",year,"/",month,sep = "")))
# axis(1, at=1:length(year_month), labels=year_month)
# extract only the interested companies
four_companies <- data[data$Company == "JPMorgan Chase & Co." |
data$Company == "Bank of America" |
data$Company == "Wells Fargo & Company" |
data$Company == "Citibank",
c("date_received","Company","timely_response")]
# convert the dates to 'Date' objects with 'as.Date'
four_companies$date_received <-
as.Date(four_companies$date_received,"%m/%d/%y")
# so that you can extract the years and months easily
year <- format(four_companies$date_received,'%y')
month <- format(four_companies$date_received,'%m')
# alternatively you can use strsplit
# convert the 'timely_response' into binary
four_companies$timely_response <-
four_companies$timely_response == "Yes"
# attach year and month to the dataset
four_companies_with_year_month <- cbind(year,month,four_companies)
# use 'aggregate' to calculate the mean response rate by category
timely_response_rate <- with(
four_companies_with_year_month,
aggregate(timely_response ~ year + month + Company, FUN = mean)
)
# order the dataframe by 1. company 2. year 3. month
timely_response_rate <-
timely_response_rate[with(timely_response_rate,order(Company,year,month)),]
# unstack the dataframe by company
timely_response_rate_by_company <-
unstack(timely_response_rate,timely_response ~ Company)
# plot the reponse rates over time, leave out the x-axis
matplot(
y = timely_response_rate_by_company, ylim = c(0.6,1.1),
ylab = "timely response rate",type = 'b',xaxt = 'n',xlab = "Year and Month"
)
# we want to label x-axis with year
axis(1, at = 2 + (-1:5) * 12, labels = as.character(2011:2017))
# add legend for readability
legend(
"bottomright", unique(timely_response_rate$Company),
pch = as.character(1:4),col = 1:4
)
# if you wish to label x-axis with year/month, do this:
# year_month <- unique(with(timely_response_rate,paste("20",year,"/",month,sep = "")))
# axis(1, at=1:length(year_month), labels=year_month)
Data=read.delim(file="consumer_complaints.txt",header=T,sep = '\t')
Csmdata=data.frame(Data)
Csmdata$date_received=as.character(Csmdata$date_received)
time1=strsplit(Csmdata$date_received,split = '/')
time2=data.frame(matrix(unlist(time1),nrow(Csmdata)))
Csmdata$day=time2$X2
Csmdata$month=time2$X1
Csmdata$year=time2$X3
Chase=Csmdata[which(Csmdata$Company=="JPMorgan Chase & Co."),]
Chase=data.frame(subset(Chase,select = c("year","month","timely_response","Company")))
BOA=Csmdata[which(Csmdata$Company=="Bank of America"),]
BOA=data.frame(subset(BOA,select = c("year","month","timely_response","Company")))
WFC=Csmdata[which(Csmdata$Company=="Wells Fargo & Company"),]
WFC=data.frame(subset(WFC,select = c("year","month","timely_response","Company")))
Citi=Csmdata[which(Csmdata$Company=="Citibank"),]
Citi=data.frame(subset(Citi,select = c("year","month","timely_response","Company")))
Table=matrix(0,ncol=6,nrow=60)
colnames(Table)=c("Year","Month","Chase","BOA","WFC","Citi")
#Year
for(i in 1:60){
Table[i,1]=(i-0.1)%/%12+2012
i=i+1
}
#Month
for(i in 1:60){
Table[i,2]=i-12*((i-0.1)%/%12)
i=i+1
}
#Chase
for(i in 1:60){
Table[i,3]=(length(which(Chase$year==((i-0.1)%/%12+12)&Chase$month==(i-12*((i-0.1)%/%12))&Chase$timely_response=="Yes")))/
(length(which(Chase$year==((i-0.1)%/%12+12)&Chase$month==(i-12*((i-0.1)%/%12)))))
i=i+1
}
#BOA
for(i in 1:60){
Table[i,4]=(length(which(BOA$year==((i-0.1)%/%12+12)&BOA$month==(i-12*((i-0.1)%/%12))&BOA$timely_response=="Yes")))/
(length(which(BOA$year==((i-0.1)%/%12+12)&BOA$month==(i-12*((i-0.1)%/%12)))))
i=i+1
}
#WFC
for(i in 1:60){
Table[i,5]=(length(which(WFC$year==((i-0.1)%/%12+12)&WFC$month==(i-12*((i-0.1)%/%12))&WFC$timely_response=="Yes")))/
(length(which(WFC$year==((i-0.1)%/%12+12)&WFC$month==(i-12*((i-0.1)%/%12)))))
i=i+1
}
#Citi
for(i in 1:60){
Table[i,6]=(length(which(Citi$year==((i-0.1)%/%12+12)&Citi$month==(i-12*((i-0.1)%/%12))&Citi$timely_response=="Yes")))/
(length(which(Citi$year==((i-0.1)%/%12+12)&Citi$month==(i-12*((i-0.1)%/%12)))))
i=i+1
}
Table
#Table shows the needed proportion for each month of the years 2012 to 2016
#Problem2(b)
par(mfrow=c(1,1))
plot(Table[,3],xlab="Month",ylab = "Proportion",type = "l",col="red") #Chase
lines(Table[,4],col='yellow') #BOA
lines(Table[,5],col='green')  #WFC
lines(Table[,6],col='blue')   #Citi
legend(x='bottomright',legend = c('Chase','BOA','WFC','Citi'),col=c('red','yellow','green','blue'),lty=c(2,1))
plot(Table[,3],xlab="Month",ylab = "Proportion",type = "l",col="red",ylim = c(0,1)) #Chase
lines(Table[,4],col='yellow') #BOA
lines(Table[,5],col='green')  #WFC
lines(Table[,6],col='blue')   #Citi
legend(x='bottomright',legend = c('Chase','BOA','WFC','Citi'),col=c('red','yellow','green','blue'),lty=c(2,1))
consumer_complaints = read.delim("consumer_complaints.txt")
New_Matrix = consumer_complaints[,c('date_received', 'timely_response', 'Company')]
New_Matrix[,1] = as.Date(New_Matrix[,1], format = "%m/%d/%y")
month = format(as.Date(New_Matrix[,1], format = "%m/%d/%y"), "%m")
New_Matrix[,4] = month
year = format(as.Date(New_Matrix[,1], format = "%m/%d/%y"), "%Y")
New_Matrix[,5] = year
colnames(New_Matrix)[4] = "Month"
colnames(New_Matrix)[5] = "Year"
New_Matrix$timely_response = as.numeric(New_Matrix$timely_response) - 1  #### Yes = 1  No = 0
New_Matrix$Month = as.numeric(New_Matrix$Month)
New_Matrix$Month = as.integer(New_Matrix$Month)
JPMC = which((New_Matrix$Company == "JPMorgan Chase & Co.") & New_Matrix$Year != 2011)
BOA = which((New_Matrix$Company == "Bank of America") & New_Matrix$Year != 2011)
WF = which((New_Matrix$Company == "Wells Fargo & Company") & New_Matrix$Year != 2011)
CITI = which((New_Matrix$Company == "Citibank") & New_Matrix$Year != 2011)
JPMC_Matrix = New_Matrix[JPMC,]
BOA_Matrix = New_Matrix[BOA,]
WF_Matrix = New_Matrix[WF,]
CITI_Matrix = New_Matrix[CITI,]
Proportion_JPMC = tapply(JPMC_Matrix$timely_response, JPMC_Matrix$Month, mean)
Proportion_BOA = tapply(BOA_Matrix$timely_response, BOA_Matrix$Month, mean)
Proportion_WF = tapply(WF_Matrix$timely_response, WF_Matrix$Month, mean)
Proportion_CITI = tapply(CITI_Matrix$timely_response, CITI_Matrix$Month, mean)
Banks = cbind(Proportion_CITI, Proportion_WF, Proportion_BOA, Proportion_JPMC)
matplot(Banks, type = c('b'),pch = 1, col = 1:4, ylab = 'Proportion', xlab = 'Month', main = "Proportion of Timely Responses per Bank")
legend('bottomleft', legend=c("Citibank", "Wells Fargo", "Bank of America", "JPMorgan Chase"), col=1:4, pch = 1)
consumer_complaints = read.delim2("consumer_complaints.txt", header = T)[,c("date_received", "Company", "timely_response")] #read in consumer complaint data
date = strsplit(as.character(consumer_complaints[,1]), "/")  #extract date data
consumer_complaints[,2] = as.character(consumer_complaints[,2])  #convert to necessary type
consumer_complaints[,3] = as.character(consumer_complaints[,3])
num_row = as.numeric(nrow(consumer_complaints))
num_col = as.numeric(length(consumer_complaints))
month = numeric(num_row)
year = numeric(num_row)
for(i in 1:num_row){    #manipulate date data further to something helpful
date[[i]] = date[[i]][-2]
date[[i]] = as.numeric(date[[i]])
}
for(i in 1:num_row) {   #create date vectors for easier access
month[i] = date[[i]][1]
year[i] = date[[i]][2]
}
consumer_complaints[[length(consumer_complaints)+1]] <- month
consumer_complaints[[length(consumer_complaints)+1]] <- year
dates = matrix(c("month", "year"),nrow=num_row,ncol = 2)
JP = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
America =  list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
Wells =  list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
Citi =  list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
month_loop = 0
year_loop = 0
index = 0
for(i in 1:num_row) {   #loop to fill NULL lists above to calulate complaint rate
month_loop = month[i]
year_loop = year[i]
if(month_loop == 7 & year_loop == 13) {
index = 1
}
if(month_loop == 8 & year_loop == 13) {
index = 2
}
if(month_loop == 9 & year_loop == 13) {
index = 3
}
if(month_loop == 10 & year_loop == 13) {
index = 4
}
if(month_loop == 11 & year_loop == 13) {
index = 5
}
if(month_loop == 12 & year_loop == 13) {
index = 6
}
if(month_loop == 1 & year_loop == 14) {
index = 7
}
if(month_loop == 2 & year_loop == 14) {
index = 8
}
if(month_loop == 3 & year_loop == 14) {
index = 9
}
if(month_loop == 4 & year_loop == 14) {
index = 10
}
if(month_loop == 5 & year_loop == 14) {
index = 11
}
if(month_loop == 6 & year_loop == 14) {
index = 12
}
if(month_loop == 7 & year_loop == 14) {
index = 13
}
if(month_loop == 8 & year_loop == 14) {
index = 14
}
if(month_loop == 9 & year_loop == 14) {
index = 15
}
if(month_loop == 10 & year_loop == 14) {
index = 16
}
if(month_loop == 11 & year_loop == 14) {
index = 17
}
if(month_loop == 12 & year_loop == 14) {
index = 18
}
if(month_loop == 1 & year_loop == 15) {
index = 19
}
if(month_loop == 2 & year_loop == 15) {
index = 20
}
if(month_loop == 3 & year_loop == 15) {
index = 21
}
if(month_loop == 4 & year_loop == 15) {
index = 22
}
if(month_loop == 5 & year_loop == 15) {
index = 23
}
if(month_loop == 6 & year_loop == 15) {
index = 24
}
if(month_loop == 7 & year_loop == 15) {
index = 25
}
if(month_loop == 8 & year_loop == 15) {
index = 26
}
if(month_loop == 9 & year_loop == 15) {
index = 27
}
if(month_loop == 10 & year_loop == 15) {
index = 28
}
if(month_loop == 11 & year_loop == 15) {
index = 29
}
if(month_loop == 12 & year_loop == 15) {
index = 30
}
if(month_loop == 1 & year_loop == 16) {
index = 31
}
if(month_loop == 2 & year_loop == 16) {
index = 32
}
if(month_loop == 3 & year_loop == 16) {
index = 33
}
if(month_loop == 4 & year_loop == 16) {
index = 34
}
if(month_loop == 5 & year_loop == 16) {
index = 35
}
if(month_loop == 6 & year_loop == 16) {
index = 36
}
if(month_loop == 7 & year_loop == 16) {
index = 37
}
if(month_loop == 8 & year_loop == 16) {
index = 38
}
if(month_loop == 9 & year_loop == 16) {
index = 39
}
if(consumer_complaints[[2]][i] == "Wells Fargo & Company") {
if(consumer_complaints[[3]][i] == "Yes") {
Wells[[index]] = c(Wells[[index]],1)
}
else {
Wells[[index]] = c(Wells[[index]],0)
}
}
if(consumer_complaints[[2]][i] == "Bank of America") {
if(consumer_complaints[[3]][i] == "Yes") {
America[[index]] = c(America[[index]],1)
}
else {
America[[index]] = c(America[[index]],0)
}
}
if(consumer_complaints[[2]][i] == "Citibank") {
if(consumer_complaints[[3]][i] == "Yes") {
Citi[[index]] = c(Citi[[index]],1)
}
else {
Citi[[index]] = c(Citi[[index]],0)
}
}
if(consumer_complaints[[2]][i] == "JPMorgan Chase & Co.") {
if(consumer_complaints[[3]][i] == "Yes") {
JP[[index]] = c(JP[[index]],1)
}
else {
JP[[index]] = c(JP[[index]],0)
}
}
}
JP_mean = list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
America_mean =  list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
Wells_mean =  list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
Citi_mean =  list(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
for(i in 1:length(JP)) {   #creating list to have rate for respective month in one entry
JP_mean[[i]] = mean(JP[[i]])
America_mean[[i]] = mean(America[[i]])
Wells_mean[[i]] = mean(Wells[[i]])
Citi_mean[[i]] = mean(Citi[[i]])
}
#creating the plot
v1 <- seq(1,39,1) # -> defines position of tick marks.
v2 <- c('7/13','8/13','9/13','10/13','11/13','12/13','1/14','2/14','3/14','4/14','5/14','6/14','7/14','8/14','9/14','10/14','11/14','12/14','1/15','2/15','3/15','4/15','5/15','6/15','7/15','8/15','9/15','10/15','11/15','12/15','1/16','2/16','3/16','4/16','5/16','6/16','7/16','8/16','9/16') # defines labels of tick marks
plot(unlist(Wells_mean),xaxt = "n", main = "Proportion of Complaints Addressed Timely",xlab = "Month/Year",ylab = "Proportion", pch = "+", col = 1)
axis(side = 1,at = v1,labels = v2,cex.axis = 0.9, tck=-.02,las = 2)
par(new = TRUE)
plot(unlist(Citi_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "^", col = 26)
par(new = TRUE)
plot(unlist(JP_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "*", col = 14)
par(new = TRUE)
plot(unlist(America_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "#", col = 3)
legend(1, 0.963, legend=c("Wells&Fargo", "Citibank","JPMorgan Chase", "Bank of America"),col=c(1,26,14,3), box.lty = 0, pch=c("+","^","*","#"), cex=0.75)
Banks
Banks
Banks = cbind(Proportion_CITI, Proportion_WF, Proportion_BOA, Proportion_JPMC)
Proportion_CITI = tapply(CITI_Matrix$timely_response, CITI_Matrix$Month, mean)
plot(unlist(Citi_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "^", col = 26)
plot(unlist(JP_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "*", col = 14)
plot(unlist(Wells_mean),xaxt = "n", main = "Proportion of Complaints Addressed Timely",xlab = "Month/Year",ylab = "Proportion", pch = "+", col = 1)
axis(side = 1,at = v1,labels = v2,cex.axis = 0.9, tck=-.02,las = 2,ylim = c(0.8,1))
plot(unlist(Wells_mean),xaxt = "n", main = "Proportion of Complaints Addressed Timely",xlab = "Month/Year",ylab = "Proportion", pch = "+", col = 1,ylim = c(0.8,1))
plot(unlist(Citi_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "^", col = 26,ylim = c(0.8,1))
plot(unlist(Wells_mean),xaxt = "n", main = "Proportion of Complaints Addressed Timely",xlab = "Month/Year",ylab = "Proportion", pch = "+", col = 1,ylim = c(0.8,1))
axis(side = 1,at = v1,labels = v2,cex.axis = 0.9, tck=-.02,las = 2)
par(new = TRUE)
plot(unlist(Citi_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "^", col = 26,ylim = c(0.8,1))
par(new = TRUE)
plot(unlist(JP_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "*", col = 14,ylim = c(0.8,1))
par(new = TRUE)
plot(unlist(America_mean), xaxt = 'n',yaxt = 'n', xlab = "", ylab = "",pch = "#", col = 3,ylim = c(0.8,1))
consumer_comps <- read.delim("consumer_complaints.txt", sep="\t", header=TRUE, fill = TRUE)
templist = strsplit(as.character(consumer_comps$date_received), '/')
dateinfo = matrix(unlist(templist), nrow = 635927, byrow = T) #635927 is number of rows, which is == length(consumer_comps$date_received)
monthvector = dateinfo[,1]
consumer_comps[, 'date_num'] = monthvector
yearvector = dateinfo[,3]
consumer_comps[, 'year_num'] = yearvector
MonthlyProportionsBoA = numeric(12)
MonthlyProportionsJPM = numeric(12)
MonthlyProportionsWFC = numeric(12)
MonthlyProportionsC = numeric(12)
boalist = list()
jplist = list()
wflist = list()
citilist = list()
for(j in 12:16){
month_ind = j - 11
for(i in 1:12){
x = sum(consumer_comps$Company == 'JPMorgan Chase & Co.' & consumer_comps$date_num == i & consumer_comps$year_num == j & consumer_comps$timely_response == 'Yes')
y = sum(consumer_comps$Company == 'JPMorgan Chase & Co.' & consumer_comps$date_num == i & consumer_comps$year_num == j)
MonthlyProportionsJPM[i] = x / y
}
jplist[[month_ind]] = MonthlyProportionsJPM
}
for(j in 12:16){
month_ind = j - 11
for(i in 1:12){
x = sum(consumer_comps$Company == 'Bank of America' & consumer_comps$date_num == i & consumer_comps$year_num == j & consumer_comps$timely_response == 'Yes')
y = sum(consumer_comps$Company == 'Bank of America' & consumer_comps$date_num == i & consumer_comps$year_num == j)
MonthlyProportionsBoA[i] = x / y
}
boalist[[month_ind]] = MonthlyProportionsBoA
}
for(j in 12:16){
month_ind = j - 11
for(i in 1:12){
x = sum(consumer_comps$Company == 'Wells Fargo & Company' & consumer_comps$date_num == i & consumer_comps$year_num == j & consumer_comps$timely_response == 'Yes')
y = sum(consumer_comps$Company == 'Wells Fargo & Company' & consumer_comps$date_num == i & consumer_comps$year_num == j)
MonthlyProportionsWFC[i] = x / y
}
wflist[[month_ind]] = MonthlyProportionsWFC
}
for(j in 12:16){
month_ind = j - 11
for(i in 1:12){
x = sum(consumer_comps$Company == 'Citibank' & consumer_comps$date_num == i & consumer_comps$year_num == j & consumer_comps$timely_response == 'Yes')
y = sum(consumer_comps$Company == 'Citibank' & consumer_comps$date_num == i & consumer_comps$year_num == j)
MonthlyProportionsC[i] = x / y
}
citilist[[month_ind]] = MonthlyProportionsC
}
plot(unlist(jplist), col = 'blue', xlab = "Month Number [from 2012 to September 2016]", ylab = "Proportion of complaints answered in a timely fashion",ylim=c(0.8,1))
points(unlist(boalist), pch = 23)
points(unlist(citilist), pch = 17)
points(unlist(wflist), pch = 2)
legend('bottomright',c("jplist","boalist", "citilist","wflist"),cex=.8,
col=c("blue","black", "black", "black"),pch=c(1,23,17,2))
consumer_complaints = read.delim("consumer_complaints.txt", header = T)
cc_adjust = data.frame(consumer_complaints$date_received, consumer_complaints$Company, consumer_complaints$timely_response)
# Split the day
day = strsplit(as.character(consumer_complaints$date_received),"/")
# Put the day into another data fram of 3 columns
day.df = data.frame(matrix(unlist(day),byrow =T,ncol=3))
# Combine the split up days with the rest of the data
cc_data = cbind(day.df,cc_adjust)
# Get the Wells Fargo Data
WF = cc_data$consumer_complaints.Company == "Wells Fargo & Company"
WFCC = cc_data[WF == T, c("X1", "X3", "consumer_complaints.timely_response")]
WF_data = aggregate(WFCC$consumer_complaints.timely_response~WFCC$X1+WFCC$X3, FUN =
function(x){
mean(as.numeric(x))-1
})
names(WF_data) = c("MONTH", "YEAR", "timely_response")
WF_data$MONTH <- as.numeric(as.character(WF_data$MONTH))
WF_data$YEAR <- as.numeric(as.character(WF_data$YEAR))
WF_final = WF_data[order(WF_data$YEAR, WF_data$MONTH),]
head(WF_final)
# Get the JPMorgan Chase & Co. data
JP = cc_data$consumer_complaints.Company == "JPMorgan Chase & Co."
JPCC = cc_data[JP == T, c("X1", "X3", "consumer_complaints.timely_response")]
JP_data = aggregate(JPCC$consumer_complaints.timely_response~JPCC$X1+JPCC$X3, FUN =
function(x){
mean(as.numeric(x))-1
})
names(JP_data) = c("MONTH", "YEAR", "timely_response")
JP_data$MONTH <- as.numeric(as.character(JP_data$MONTH))
JP_data$YEAR <- as.numeric(as.character(JP_data$YEAR))
JP_final = JP_data[order(JP_data$YEAR, JP_data$MONTH),]
head(JP_final)
# Get the Bank of America data
BA = cc_data$consumer_complaints.Company == "Bank of America"
BACC = cc_data[BA == T, c("X1", "X3", "consumer_complaints.timely_response")]
BA_data = aggregate(BACC$consumer_complaints.timely_response~BACC$X1+BACC$X3, FUN =
function(x){
mean(as.numeric(x))-1
})
names(BA_data) = c("MONTH", "YEAR", "timely_response")
BA_data$MONTH <- as.numeric(as.character(BA_data$MONTH))
BA_data$YEAR <- as.numeric(as.character(BA_data$YEAR))
BA_final = BA_data[order(BA_data$YEAR, BA_data$MONTH),]
head(BA_final)
# Get the Citibank data
CT = cc_data$consumer_complaints.Company == "Citibank"
CTCC = cc_data[CT == T, c("X1", "X3", "consumer_complaints.timely_response")]
CT_data = aggregate(CTCC$consumer_complaints.timely_response~CTCC$X1+CTCC$X3, FUN =
function(x){
mean(as.numeric(x))-1
})
names(CT_data) = c("MONTH", "YEAR", "timely_response")
CT_data$MONTH <- as.numeric(as.character(CT_data$MONTH))
CT_data$YEAR <- as.numeric(as.character(CT_data$YEAR))
CT_final = CT_data[order(CT_data$YEAR, CT_data$MONTH),]
head(CT_final)
tsWF = ts(WF_final$timely_response, start = c(12,1), end = c(16,9), frequency = 12)
tsJP = ts(JP_final$timely_response, start = c(12,1), end = c(16,9), frequency = 12)
tsBA = ts(BA_final$timely_response, start = c(12,1), end = c(16,9), frequency = 12)
tsCT = ts(CT_final$timely_response, start = c(12,1), end = c(16,9), frequency = 12)
ts.plot(tsWF, tsJP, tsBA, tsCT, col = c('blue','red','green','yellow'))
plot = ts.plot(tsWF, tsJP, tsBA, tsCT, ylab = "Proportion of Timely Responses", col = c("blue", "red", "green", "yellow"))
legend(13.5,0.9, legend = c("Wells Fargo & Company", "JPMorgan Chase & Co.", "Bank of America", "Citibank"),
col = c("blue", "red", "green", "yellow"), lty = 1:1)
# END OF PROBLEM 2
tsWF
WF_final$timely_response
tsWF
